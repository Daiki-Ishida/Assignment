<!DOCTYPE html>
<html>

<head>
  <title>Sample-App</title>
  <link rel='stylesheet' href='/stylesheets/style.css' />
  <script src="/socket.io/socket.io.js"></script>
</head>

<body>
  <h1>Room Name: <%= room.name %></h1>
  <h1>Host Name: <%= room.host.name %></h1>

  <div class="chat">
    <div id="notice"></div>
    <ul id="messages"></ul>
    <form action="" class="chat-form">
      <input id="messageInput" placeholder="Please Input Here..." />
      <button type="button" onclick="send()">Send</button>
    </form>
  </div>

  <script>
    const socket = io('/chat/rooms');
    const messages = document.getElementById('messages');
    const notice = document.getElementById('notice')

    const send = () => {
      const message = document.getElementById('messageInput');
      if (message == '') {
        return false;
      }
      socket.emit('req', message.value);
      message.value = '';
    }

    socket.on('connect', () => {
      const room = '<%= room.id %>'
      socket.emit('joinToRoom', room);
    })

    socket.on('notice', (content) => {
      const newNotice = document.createElement("p");
      newNotice.textContent = content;
      notice.appendChild(newNotice);
    })

    socket.on('init', (msgs) => {
      for (var i in msgs) {
        let msg = document.createElement("li");
        msg.textContent = `${msgs[i].User.name}: ${msgs[i].content}`;
        messages.appendChild(msg);
      }
    })

    socket.on('res', (data) => {
      const newMsg = document.createElement("li");
      newMsg.textContent = `${data.userName}: ${data.content}`;
      messages.appendChild(newMsg);
    })

    socket.on('disconnect', () => {
      alert('ログイン状態が確認できませんでした。再度ログインをお願いします。');
      location.href = "/login";
    })

  </script>
</body>

</html>